substitutions:
  # change device name to match your desired name
  device_name: "espresence-mmwave-nightlight"
  # change sensor name below to the one you want to see in Home Assistant
  device_name_pretty: Bathroom Nightlight mmWave Occupancy Sensor
  # change room name below to the one you want to see in Home Assistant
  room: "Bathroom"
  # change the below to be your WiFi SSID
  ssid: !secret wifi_ssid
  # change the below to be your WiFi password
  wifi_password: !secret wifi_password
  # UART Pin configured for a D1 Mini stacked setup
  uart_tx_pin: GPIO37
  # TX Pin configured for a D1 Mini stacked setup
  uart_rx_pin: GPIO36
  # RX Pin configured for a D1 Mini stacked setup
  gpio_pin: GPIO35

# include the yml file with the sensor configuration
packages:
  inclusions: !include packages/leapmmw_sensor.yml

esphome:
  name: $device_name
  platformio_options:
    board_build.extra_flags:
      - "-DARDUINO_USB_CDC_ON_BOOT=0"  # Override, defaults to '-DARDUINO_USB_CDC_ON_BOOT=1'

esp32:
  board: adafruit_qtpy_esp32s2
  framework:
    type: arduino

# Enable Home Assistant API
api:
  encryption:
    key: "your-key-here"

ota:
  password: "your-password-here"

# Connect to WiFi & create captive portal and web server
wifi:
  ssid: "${ssid}"
  password: "${wifi_password}"
  use_address: XXX.XXX.XXX.XXX

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name}"
    password: "${wifi_password}"
  #manual_ip:
    # Set this to the IP of the ESP
    #static_ip: XXX.XXX.XXX.XXX
    # Set this to the IP address of the router. Often ends with .1
    #gateway: XXX.XXX.XXX.XXX
    # The subnet of the network. 255.255.255.0 works for most home networks.
    #subnet: XXX.XXX.XXX.XXX
    
captive_portal:

web_server:
  port: 80
  version: 2
  include_internal: true

http_request:
  useragent: esphome/$device_name
  timeout: 2s
  
